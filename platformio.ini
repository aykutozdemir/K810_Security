[env:promicro16]
platform = atmelavr
board = sparkfun_promicro16
framework = arduino
monitor_speed = 9600
check_tool = cppcheck

lib_deps =
    ezButton
    ezLED
    Wire
    EEPROM
    StaticSerialCommands
    SimpleTimer
    MemoryUsage
    SafeInterrupts
    BufferedStreams
    SoftwareSerial
    ArduinoQueue
    ArduinoMap
    CircularBuffer
    FastPin
    HC05
    Packager
    SoftSerial
    Statistics
    Utilities
    I2C-master
    
lib_extra_dirs =
    lib/
    .pio/libdeps/promicro16

build_unflags =

build_flags =
    -Os                     ; Optimize for size - reduces program size at the cost of execution speed
    -flto                   ; Link-time optimization - enables whole-program optimization across all source files
    -ffunction-sections     ; Put each function in a separate section - allows linker to remove unused functions
    -fdata-sections         ; Put each data in a separate section - allows linker to remove unused data
    -fno-exceptions         ; Disable C++ exceptions - reduces program size and improves performance
    -fstrict-aliasing       ; Enable strict aliasing - allows compiler to make more aggressive optimizations
    -mcall-prologues        ; Reuse function prologue/epilogue - reduces program size by sharing common code
    -Wl,--relax             ; Enable linker relaxation - reduces program size by optimizing jumps
    -mstrict-X              ; Enable strict X register usage - prevents X register from being used as a temporary
    -maccumulate-args       ; Accumulate outgoing function arguments - reduces stack usage
    -fmerge-all-constants   ; Merge identical constants - reduces program size by combining duplicate constants
    -fpack-struct           ; Pack all structures - reduces memory usage by removing padding
    -Wl,--gc-sections       ; Remove unused functions and data - eliminates dead code
    -DNDEBUG                ; Disable debugging macros - removes debug code
    -g0                     ; Disable debugging information - reduces program size
    -fshort-enums           ; Shorten enums - uses smallest possible size for enum values
    -fno-unwind-tables      ; Disable unwind tables - reduces program size
    -fno-asynchronous-unwind-tables ; Disable async unwind tables - reduces program size
    -D F_CPU=16000000L      ; Define CPU frequency - sets the microcontroller clock speed
    -I"${platformio.packages_dir}/framework-arduino-avr/cores/arduino" ; Include Arduino core headers
    -I"${platformio.packages_dir}/framework-arduino-avr/variants/promicro" ; Include ProMicro variant headers
    -I"${platformio.packages_dir}/toolchain-atmelavr/avr/include" ; Include AVR toolchain headers
    -fverbose-asm           ; Generate verbose assembly output - useful for analysis
    -fomit-frame-pointer    ; Don't keep frame pointer - reduces stack usage
    -fno-stack-protector    ; Disable stack protection - reduces overhead
    -save-temps=obj         ; Save intermediate files - useful for debugging
    -Wl,-Map,main.map       ; Generate memory map file - useful for analysis

extra_scripts = 
    pre:generate_version.py
    post:asembly_analyzer.py

check_flags =
    --suppress=unusedFunction
    --suppress=cstyleCast